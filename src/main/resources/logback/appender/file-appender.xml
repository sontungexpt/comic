<?xml version="1.0" encoding="UTF-8"?>
<included>
  <property name="LOG_DIR" value="${LOG_DIR:-logs}"></property>
  <property name="LOG_PATH_INFO" value="${LOG_DIR}/infos"></property>
  <property name="LOG_PATH_DEBUG" value="${LOG_DIR}/debugs"></property>
  <property name="LOG_PATH_ERROR" value="${LOG_DIR}/errors"></property>
  <property name="LOG_PATH_WARN" value="${LOG_DIR}/warns"></property>
  <property name="LOG_PATH_HTTP_REQUEST" value="${LOG_DIR}/https"></property>
  <property name="FILE_LOG_PATTERN" value="${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- %applicationName[%t] ${LOG_CORRELATION_PATTERN:-}%-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"></property>
  <property name="LOG_HISTORIC_MAX" value="${LOG_HISTORIC_MAX:-15}"></property>
  <property name="LOG_MAX_FILE_SIZE" value="${LOG_MAX_FILE_SIZE:-10MB}"></property>
  <property name="LOG_TOTAL_SIZE_CAP" value="${LOG_TOTAL_SIZE_CAP:-1GB}"></property>
  <appender class="ch.qos.logback.core.rolling.RollingFileAppender" name="INFO_FILE">
    <file>${LOG_PATH_INFO}/info.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <fileNamePattern>${LOG_PATH_INFO}/info.%d{dd-MM-yyyy}.%i.log.gz</fileNamePattern>
      <maxHistory>${LOG_INFO_HISTORIC_MAX:-${LOG_HISTORIC_MAX}}</maxHistory>
      <maxFileSize>${LOG_INFO_MAX_FILE_SIZE:-${LOG_MAX_FILE_SIZE}}</maxFileSize>
      <totalSizeCap>${LOG_INFO_TOTAL_SIZE_CAP:-${LOG_TOTAL_SIZE_CAP}}</totalSizeCap>
    </rollingPolicy>
    <encoder>
      <pattern>${FILE_LOG_PATTERN}</pattern>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>INFO</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
  </appender>
  <appender class="ch.qos.logback.core.rolling.RollingFileAppender" name="DEBUG_FILE">
    <file>${LOG_PATH_DEBUG}/debug.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <fileNamePattern>${LOG_PATH_DEBUG}/debug.%d{dd-MM-yyyy}.%i.log.gz</fileNamePattern>
      <maxHistory>${LOG_DEBUG_HISTORIC_MAX:-${LOG_HISTORIC_MAX}}</maxHistory>
      <maxFileSize>${LOG_DEBUG_MAX_FILE_SIZE:-${LOG_MAX_FILE_SIZE}}</maxFileSize>
      <totalSizeCap>${LOG_DEBUG_TOTAL_SIZE_CAP:-${LOG_TOTAL_SIZE_CAP}}</totalSizeCap>
    </rollingPolicy>
    <encoder>
      <pattern>${FILE_LOG_PATTERN}</pattern>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>DEBUG</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
  </appender>
  <appender class="ch.qos.logback.core.rolling.RollingFileAppender" name="WARN_FILE">
    <file>${LOG_PATH_WARN}/warn.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <fileNamePattern>${LOG_PATH_WARN}/warn.%d{dd-MM-yyyy}.%i.log.gz</fileNamePattern>
      <maxHistory>${LOG_WARN_HISTORIC_MAX:-${LOG_HISTORIC_MAX}}</maxHistory>
      <maxFileSize>${LOG_WARN_MAX_FILE_SIZE:-${LOG_MAX_FILE_SIZE}}</maxFileSize>
      <totalSizeCap>${LOG_WARN_TOTAL_SIZE_CAP:-${LOG_TOTAL_SIZE_CAP}}</totalSizeCap>
    </rollingPolicy>
    <encoder>
      <pattern>${FILE_LOG_PATTERN}</pattern>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>WARN</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
  </appender>
  <appender class="ch.qos.logback.core.rolling.RollingFileAppender" name="ERROR_FILE">
    <file>${LOG_PATH_ERROR}/error.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <fileNamePattern>${LOG_PATH_ERROR}/error.%d{dd-MM-yyyy}.%i.log.gz</fileNamePattern>
      <maxHistory>${LOG_ERROR_HISTORIC_MAX:-${LOG_HISTORIC_MAX}}</maxHistory>
      <maxFileSize>${LOG_ERROR_MAX_FILE_SIZE:-${LOG_MAX_FILE_SIZE}}</maxFileSize>
      <totalSizeCap>${LOG_ERROR_TOTAL_SIZE_CAP:-${LOG_TOTAL_SIZE_CAP}}</totalSizeCap>
    </rollingPolicy>
    <encoder>
      <pattern>${FILE_LOG_PATTERN}</pattern>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>ERROR</level>
      <onMatch>ACCEPT</onMatch>
      <onMismatch>DENY</onMismatch>
    </filter>
  </appender>
  <appender class="ch.qos.logback.core.rolling.RollingFileAppender" name="HTTP_REQUEST_FILE">
    <file>${LOG_PATH_HTTP_REQUEST}/http.log</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <fileNamePattern>${LOG_PATH_HTTP_REQUEST}/http.%d{dd-MM-yyyy}.%i.log.gz</fileNamePattern>
      <maxHistory>${LOG_HTTP_REQUEST_HISTORIC_MAX:-${LOG_HISTORIC_MAX}}</maxHistory>
      <maxFileSize>${LOG_HTTP_REQUEST_MAX_FILE_SIZE:-${LOG_MAX_FILE_SIZE}}</maxFileSize>
      <totalSizeCap>${LOG_HTTP_REQUEST_TOTAL_SIZE_CAP:-${LOG_TOTAL_SIZE_CAP}}</totalSizeCap>
    </rollingPolicy>
    <encoder>
      <pattern>${FILE_LOG_PATTERN}</pattern>
    </encoder>
  </appender>
  <!-- Appender async -->
  <appender class="ch.qos.logback.classic.AsyncAppender" name="ASYNC_INFO_FILE">
    <appender-ref ref="INFO_FILE"></appender-ref>
  </appender>
  <appender class="ch.qos.logback.classic.AsyncAppender" name="ASYNC_DEBUG_FILE">
    <appender-ref ref="DEBUG_FILE"></appender-ref>
  </appender>
  <appender class="ch.qos.logback.classic.AsyncAppender" name="ASYNC_WARN_FILE">
    <appender-ref ref="WARN_FILE"></appender-ref>
  </appender>
  <appender class="ch.qos.logback.classic.AsyncAppender" name="ASYNC_ERROR_FILE">
    <appender-ref ref="ERROR_FILE"></appender-ref>
  </appender>
  <appender class="ch.qos.logback.classic.AsyncAppender" name="ASYNC_HTTP_REQUEST_FILE">
    <appender-ref ref="HTTP_REQUEST_FILE"></appender-ref>
  </appender>
</included>
